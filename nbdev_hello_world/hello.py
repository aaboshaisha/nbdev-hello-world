"""A simple hello world example in nbdev."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_hello.ipynb.

# %% auto 0
__all__ = ['say_hello', 'say_goodbye', 'Person', 'Person2']

# %% ../nbs/00_hello.ipynb 3
def say_hello(to):
    "Say hello to somebody"
    return f"Hello {to}!"

# %% ../nbs/00_hello.ipynb 5
def say_goodbye(to):
    "Say goodbye to somebody"
    return f"Goodbye {to}"

# %% ../nbs/00_hello.ipynb 7
class Person:
    "A dummy class to test."
    def __init__(self, name: str, age: int): self.name, self.age = name, age
    def __str__(self): return f'Name: {self.name}, Age:{self.age}'
    __repr__ = __str__

# %% ../nbs/00_hello.ipynb 11
class Person2:
    "A dummy class to test."
    def __init__(self, 
                 name: str, # a person's name 
                 age: int): # a person's age
        self.name, self.age = name, age
    def __str__(self): return f'Name: {self.name}, Age:{self.age}'
    __repr__ = __str__

# %% ../nbs/00_hello.ipynb 18
from fastcore.utils import *

# %% ../nbs/00_hello.ipynb 20
@patch
def __eq__(self: Person, other:Person): return (self.name, self.age) == (other.name, other.age)

# %% ../nbs/00_hello.ipynb 25
@patch
def __lt__(self: Person, other: Person): return (self.name, self.age) < (other.name, other.age)

# %% ../nbs/00_hello.ipynb 27
@patch
def __gt__(self: Person, other: Person): return (self.name, self.age) > (other.name, other.age)
